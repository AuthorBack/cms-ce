<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

  <context:annotation-config/>

  <context:property-placeholder properties-ref="config"/>

  <context:component-scan base-package="com.enonic.cms.framework"/>
  <context:component-scan base-package="com.enonic.cms.core"/>
  <context:component-scan base-package="com.enonic.vertical.engine"/>
  <context:component-scan base-package="com.enonic.vertical.adminweb.handlers.preview"/>
  <context:component-scan base-package="com.enonic.cms.store"/>

  <tx:annotation-driven transaction-manager="transactionManager"/>

  <bean id="dataSource" class="com.enonic.cms.store.support.DataSourceFactory">
    <property name="jndiName" value="java:comp/env/jdbc/cms"/>
  </bean>

  <bean id="dialect" class="com.enonic.cms.framework.jdbc.dialect.DialectFactory">
    <property name="dataSource" ref="dataSource"/>
    <property name="dialectName" value="${cms.jdbc.dialect}"/>
  </bean>

  <bean id="sessionFactory" class="com.enonic.cms.store.support.HibernateConfigurator">
    <property name="dialect" ref="dialect"/>
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="classpath:com/enonic/cms/store/hibernate.cfg.xml"/>
    <property name="useTransactionAwareDataSource" value="false"/>
    <property name="logging" value="${cms.jdbc.logging}"/>
  </bean>

  <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <bean id="decoratorManager" class="com.enonic.cms.store.support.DecoratorManager">
    <property name="logging" value="${cms.jdbc.logging}"/>
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="dialect" ref="dialect"/>
  </bean>

  <bean id="connectionFactory" class="com.enonic.cms.store.support.ConnectionFactory">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="decorator" ref="decoratorManager"/>
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="dataSource" ref="dataSource"/>
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="defaultTimeout" value="${cms.tx.defaultTimeout}"/>
  </bean>

  <bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager"/>
  </bean>

  <bean id="databaseInitializer" class="com.enonic.cms.core.jdbc.DatabaseInitializer">
    <property name="userStoreService" ref="userStoreService"/>
    <property name="upgradeService" ref="upgradeService"/>
  </bean>

  <bean id="upgradePropertyResolver" class="com.enonic.cms.upgrade.service.StandardPropertyResolver"/>

  <bean id="upgradeService" class="com.enonic.cms.upgrade.service.UpgradeServiceImpl">
    <property name="connectionFactory" ref="connectionFactory"/>
    <property name="dialect" ref="dialect"/>
    <property name="transactionTemplate" ref="transactionTemplate"/>
    <property name="propertyResolver" ref="upgradePropertyResolver"/>
  </bean>

  <bean id="adminAjaxService" class="com.enonic.cms.server.service.admin.ajax.AdminAjaxServiceImpl"/>

  <bean id="originalUrlResolver" class="com.enonic.cms.server.service.servlet.OriginalUrlResolver"/>

  <bean id="mbeanExporter" class="org.springframework.jmx.export.MBeanExporter">
    <property name="beans">
      <map>
        <entry key="EnonicCMS:type=Cache,name=Entity" value-ref="cacheEntity"/>
        <entry key="EnonicCMS:type=Cache,name=Page" value-ref="cachePage"/>
        <entry key="EnonicCMS:type=Cache,name=Binary" value-ref="cacheBinary"/>
        <entry key="EnonicCMS:type=Cache,name=Xslt" value-ref="cacheXslt"/>
        <entry key="EnonicCMS:type=Configuration,name=System"
               value-ref="systemProperties"/>
      </map>
    </property>
  </bean>

  <bean id="cacheEntity" class="com.enonic.cms.core.mbean.cache.Entity"/>
  <bean id="cachePage" class="com.enonic.cms.core.mbean.cache.Page"/>
  <bean id="cacheBinary" class="com.enonic.cms.core.mbean.cache.Binary"/>
  <bean id="cacheXslt" class="com.enonic.cms.core.mbean.cache.Xslt"/>

  <bean id="mbeanServerFactory" class="org.springframework.jmx.support.MBeanServerFactoryBean">
    <property name="locateExistingServerIfPossible" value="true"/>
  </bean>

  <bean id="systemProperties" class="com.enonic.cms.core.mbean.configuration.System"/>

  <bean id="siteListener" class="com.enonic.cms.core.mbean.configuration.SiteListener"
        depends-on="siteService"
        destroy-method="destroy">
    <property name="objectNamePrefix" value="EnonicCMS:type=Configuration,name="/>
  </bean>

  <bean id="datasourceInfoResolver" class="com.enonic.cms.core.tools.DataSourceInfoResolver"/>

  <bean class="com.enonic.vertical.adminweb.handlers.xmlbuilders.ContentArticle3XMLBuilder"/>
  <bean class="com.enonic.vertical.adminweb.handlers.xmlbuilders.GeneralContentXMLBuilder"/>
  <bean class="com.enonic.vertical.adminweb.handlers.xmlbuilders.ContentDocumentXMLBuilder"/>
  <bean class="com.enonic.vertical.adminweb.handlers.xmlbuilders.ContentEnhancedImageXMLBuilder"/>
  <bean class="com.enonic.vertical.adminweb.handlers.xmlbuilders.ContentFileXMLBuilder"/>
  <bean class="com.enonic.vertical.adminweb.handlers.xmlbuilders.ContentNewsletterXMLBuilder"/>
  <bean class="com.enonic.vertical.adminweb.handlers.xmlbuilders.ContentPollXMLBuilder"/>
  <bean class="com.enonic.vertical.adminweb.handlers.xmlbuilders.SimpleContentXMLBuilder"/>

  <bean id="schedulerManager" class="com.enonic.vertical.work.quartz.QuartzSchedulerManager">
    <property name="enabled" value="${cms.scheduler.enabled}"/>
    <property name="clustered" value="true"/>
  </bean>

  <bean class="com.enonic.vertical.work.quartz.QuartzWorkService"/>

  <bean name="schedulerTranscationTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager"/>
    <property name="propagationBehaviorName" value="PROPAGATION_REQUIRES_NEW"/>
    <property name="timeout" value="${cms.scheduler.tx.timeout}"/>
  </bean>

  <bean id="workRunner" class="com.enonic.vertical.work.WorkRunnerImpl">
    <property name="transactionTemplate" ref="schedulerTranscationTemplate"/>
  </bean>

</beans>
